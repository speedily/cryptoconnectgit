"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.3.0
//   protoc               unknown
// source: cosmos/group/module/v1/module.proto
Object.defineProperty(exports, "__esModule", { value: true });
exports.Module = exports.protobufPackage = void 0;
/* eslint-disable */
const wire_1 = require("@bufbuild/protobuf/wire");
const duration_1 = require("../../../../google/protobuf/duration");
exports.protobufPackage = "cosmos.group.module.v1";
function createBaseModule() {
    return { maxExecutionPeriod: undefined, maxMetadataLen: "0", maxProposalTitleLen: "0", maxProposalSummaryLen: "0" };
}
exports.Module = {
    encode(message, writer = new wire_1.BinaryWriter()) {
        if (message.maxExecutionPeriod !== undefined) {
            duration_1.Duration.encode(message.maxExecutionPeriod, writer.uint32(10).fork()).join();
        }
        if (message.maxMetadataLen !== "0") {
            writer.uint32(16).uint64(message.maxMetadataLen);
        }
        if (message.maxProposalTitleLen !== "0") {
            writer.uint32(24).uint64(message.maxProposalTitleLen);
        }
        if (message.maxProposalSummaryLen !== "0") {
            writer.uint32(32).uint64(message.maxProposalSummaryLen);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseModule();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 10) {
                        break;
                    }
                    message.maxExecutionPeriod = duration_1.Duration.decode(reader, reader.uint32());
                    continue;
                }
                case 2: {
                    if (tag !== 16) {
                        break;
                    }
                    message.maxMetadataLen = reader.uint64().toString();
                    continue;
                }
                case 3: {
                    if (tag !== 24) {
                        break;
                    }
                    message.maxProposalTitleLen = reader.uint64().toString();
                    continue;
                }
                case 4: {
                    if (tag !== 32) {
                        break;
                    }
                    message.maxProposalSummaryLen = reader.uint64().toString();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            maxExecutionPeriod: isSet(object.maxExecutionPeriod) ? duration_1.Duration.fromJSON(object.maxExecutionPeriod) : undefined,
            maxMetadataLen: isSet(object.maxMetadataLen) ? globalThis.String(object.maxMetadataLen) : "0",
            maxProposalTitleLen: isSet(object.maxProposalTitleLen) ? globalThis.String(object.maxProposalTitleLen) : "0",
            maxProposalSummaryLen: isSet(object.maxProposalSummaryLen)
                ? globalThis.String(object.maxProposalSummaryLen)
                : "0",
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.maxExecutionPeriod !== undefined) {
            obj.maxExecutionPeriod = duration_1.Duration.toJSON(message.maxExecutionPeriod);
        }
        if (message.maxMetadataLen !== "0") {
            obj.maxMetadataLen = message.maxMetadataLen;
        }
        if (message.maxProposalTitleLen !== "0") {
            obj.maxProposalTitleLen = message.maxProposalTitleLen;
        }
        if (message.maxProposalSummaryLen !== "0") {
            obj.maxProposalSummaryLen = message.maxProposalSummaryLen;
        }
        return obj;
    },
    create(base) {
        return exports.Module.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a, _b, _c;
        const message = createBaseModule();
        message.maxExecutionPeriod = (object.maxExecutionPeriod !== undefined && object.maxExecutionPeriod !== null)
            ? duration_1.Duration.fromPartial(object.maxExecutionPeriod)
            : undefined;
        message.maxMetadataLen = (_a = object.maxMetadataLen) !== null && _a !== void 0 ? _a : "0";
        message.maxProposalTitleLen = (_b = object.maxProposalTitleLen) !== null && _b !== void 0 ? _b : "0";
        message.maxProposalSummaryLen = (_c = object.maxProposalSummaryLen) !== null && _c !== void 0 ? _c : "0";
        return message;
    },
};
function isSet(value) {
    return value !== null && value !== undefined;
}
