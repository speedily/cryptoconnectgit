import { type Chain, type Client, type Transport } from "viem";
import { type PrepareUserOperationReturnType, type SendUserOperationParameters, type SmartAccount } from "viem/account-abstraction";
export type PrepareAndSignUserOperationsParameters<account extends SmartAccount | undefined = SmartAccount | undefined, accountOverride extends SmartAccount | undefined = SmartAccount | undefined, calls extends readonly unknown[] = readonly unknown[]> = SendUserOperationParameters<account, accountOverride, calls> & {
    chainId: number;
};
export type SignUserOperationsReturnType = PrepareUserOperationReturnType[];
export declare function prepareAndSignUserOperations<account extends SmartAccount | undefined, chain extends Chain | undefined, accountOverride extends SmartAccount | undefined = undefined, calls extends readonly unknown[] = readonly unknown[]>(clients: Client<Transport, chain, account>[], args_: PrepareAndSignUserOperationsParameters<account, accountOverride, calls>[]): Promise<SignUserOperationsReturnType>;
//# sourceMappingURL=prepareAndSignUserOperations.d.ts.map