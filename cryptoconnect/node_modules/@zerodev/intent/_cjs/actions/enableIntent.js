"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.enableIntent = enableIntent;
const sdk_1 = require("@zerodev/sdk");
const actions_1 = require("@zerodev/sdk/actions");
const constants_1 = require("@zerodev/sdk/constants");
const viem_1 = require("viem");
const account_abstraction_1 = require("viem/account-abstraction");
const utils_1 = require("viem/utils");
const installIntentExecutor_js_1 = require("../utils/installIntentExecutor.js");
async function enableIntent(client, version) {
    if (!client.account)
        throw new Error("Account not found");
    const account = client.account;
    const client_ = client?.client;
    if (!client_)
        throw new Error("PublicClient not found ! Add it to the IntentClient using the client option");
    const kernelImplementation = await (0, actions_1.getKernelImplementationAddress)(client_, {
        address: account.address,
    });
    const isV32 = (0, viem_1.isAddressEqual)(kernelImplementation, constants_1.KernelVersionToAddressesMap[constants_1.KERNEL_V3_2].accountImplementationAddress);
    const calls = [];
    if (!isV32) {
        const upgradeCall = await (0, sdk_1.getUpgradeKernelCall)(account, constants_1.KERNEL_V3_2);
        calls.push(upgradeCall);
    }
    const executorCall = await (0, installIntentExecutor_js_1.getInstallIntentExecutorCall)({
        accountAddress: account.address,
        version,
    });
    calls.push(executorCall);
    return (0, utils_1.getAction)(client, account_abstraction_1.sendUserOperation, "sendUserOperation")({
        calls,
    });
}
//# sourceMappingURL=enableIntent.js.map