import { http } from "msw";
import type { EvmAccount, ExportEvmAccount200, ExportEvmAccountByName200, ListEvmAccounts200, SendEvmTransaction200, SignEvmHash200, SignEvmMessage200, SignEvmTransaction200, SignEvmTypedData200 } from "../coinbaseDeveloperPlatformAPIs.schemas.js";
export declare const getListEvmAccountsResponseMock: () => ListEvmAccounts200;
export declare const getCreateEvmAccountResponseMock: (overrideResponse?: Partial<EvmAccount>) => EvmAccount;
export declare const getGetEvmAccountResponseMock: (overrideResponse?: Partial<EvmAccount>) => EvmAccount;
export declare const getUpdateEvmAccountResponseMock: (overrideResponse?: Partial<EvmAccount>) => EvmAccount;
export declare const getGetEvmAccountByNameResponseMock: (overrideResponse?: Partial<EvmAccount>) => EvmAccount;
export declare const getSendEvmTransactionResponseMock: (overrideResponse?: Partial<SendEvmTransaction200>) => SendEvmTransaction200;
export declare const getSignEvmTransactionResponseMock: (overrideResponse?: Partial<SignEvmTransaction200>) => SignEvmTransaction200;
export declare const getSignEvmHashResponseMock: (overrideResponse?: Partial<SignEvmHash200>) => SignEvmHash200;
export declare const getSignEvmMessageResponseMock: (overrideResponse?: Partial<SignEvmMessage200>) => SignEvmMessage200;
export declare const getSignEvmTypedDataResponseMock: (overrideResponse?: Partial<SignEvmTypedData200>) => SignEvmTypedData200;
export declare const getImportEvmAccountResponseMock: (overrideResponse?: Partial<EvmAccount>) => EvmAccount;
export declare const getExportEvmAccountResponseMock: (overrideResponse?: Partial<ExportEvmAccount200>) => ExportEvmAccount200;
export declare const getExportEvmAccountByNameResponseMock: (overrideResponse?: Partial<ExportEvmAccountByName200>) => ExportEvmAccountByName200;
export declare const getListEvmAccountsMockHandler: (overrideResponse?: ListEvmAccounts200 | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<ListEvmAccounts200> | ListEvmAccounts200)) => import("msw").HttpHandler;
export declare const getCreateEvmAccountMockHandler: (overrideResponse?: EvmAccount | ((info: Parameters<Parameters<typeof http.post>[1]>[0]) => Promise<EvmAccount> | EvmAccount)) => import("msw").HttpHandler;
export declare const getGetEvmAccountMockHandler: (overrideResponse?: EvmAccount | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<EvmAccount> | EvmAccount)) => import("msw").HttpHandler;
export declare const getUpdateEvmAccountMockHandler: (overrideResponse?: EvmAccount | ((info: Parameters<Parameters<typeof http.put>[1]>[0]) => Promise<EvmAccount> | EvmAccount)) => import("msw").HttpHandler;
export declare const getGetEvmAccountByNameMockHandler: (overrideResponse?: EvmAccount | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<EvmAccount> | EvmAccount)) => import("msw").HttpHandler;
export declare const getSendEvmTransactionMockHandler: (overrideResponse?: SendEvmTransaction200 | ((info: Parameters<Parameters<typeof http.post>[1]>[0]) => Promise<SendEvmTransaction200> | SendEvmTransaction200)) => import("msw").HttpHandler;
export declare const getSignEvmTransactionMockHandler: (overrideResponse?: SignEvmTransaction200 | ((info: Parameters<Parameters<typeof http.post>[1]>[0]) => Promise<SignEvmTransaction200> | SignEvmTransaction200)) => import("msw").HttpHandler;
export declare const getSignEvmHashMockHandler: (overrideResponse?: SignEvmHash200 | ((info: Parameters<Parameters<typeof http.post>[1]>[0]) => Promise<SignEvmHash200> | SignEvmHash200)) => import("msw").HttpHandler;
export declare const getSignEvmMessageMockHandler: (overrideResponse?: SignEvmMessage200 | ((info: Parameters<Parameters<typeof http.post>[1]>[0]) => Promise<SignEvmMessage200> | SignEvmMessage200)) => import("msw").HttpHandler;
export declare const getSignEvmTypedDataMockHandler: (overrideResponse?: SignEvmTypedData200 | ((info: Parameters<Parameters<typeof http.post>[1]>[0]) => Promise<SignEvmTypedData200> | SignEvmTypedData200)) => import("msw").HttpHandler;
export declare const getImportEvmAccountMockHandler: (overrideResponse?: EvmAccount | ((info: Parameters<Parameters<typeof http.post>[1]>[0]) => Promise<EvmAccount> | EvmAccount)) => import("msw").HttpHandler;
export declare const getExportEvmAccountMockHandler: (overrideResponse?: ExportEvmAccount200 | ((info: Parameters<Parameters<typeof http.post>[1]>[0]) => Promise<ExportEvmAccount200> | ExportEvmAccount200)) => import("msw").HttpHandler;
export declare const getExportEvmAccountByNameMockHandler: (overrideResponse?: ExportEvmAccountByName200 | ((info: Parameters<Parameters<typeof http.post>[1]>[0]) => Promise<ExportEvmAccountByName200> | ExportEvmAccountByName200)) => import("msw").HttpHandler;
export declare const getEvmAccountsMock: () => import("msw").HttpHandler[];
//# sourceMappingURL=evm-accounts.msw.d.ts.map