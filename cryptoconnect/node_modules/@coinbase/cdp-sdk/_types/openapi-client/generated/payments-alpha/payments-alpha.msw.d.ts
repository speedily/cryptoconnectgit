import { http } from "msw";
import type { CreatePaymentTransferQuote201, CryptoRail, CryptoRailAddress, PaymentMethod, PaymentMethodRequest, Transfer } from "../coinbaseDeveloperPlatformAPIs.schemas.js";
export declare const getGetPaymentMethodsResponseMock: () => PaymentMethod[];
export declare const getGetCryptoRailsResponseMock: () => CryptoRail[];
export declare const getCreatePaymentTransferQuoteResponsePaymentMethodRequestMock: (overrideResponse?: Partial<PaymentMethodRequest>) => PaymentMethodRequest;
export declare const getCreatePaymentTransferQuoteResponseCryptoRailAddressMock: (overrideResponse?: Partial<CryptoRailAddress>) => CryptoRailAddress;
export declare const getCreatePaymentTransferQuoteResponseMock: (overrideResponse?: Partial<CreatePaymentTransferQuote201>) => CreatePaymentTransferQuote201;
export declare const getExecutePaymentTransferQuoteResponsePaymentMethodRequestMock: (overrideResponse?: Partial<PaymentMethodRequest>) => PaymentMethodRequest;
export declare const getExecutePaymentTransferQuoteResponseCryptoRailAddressMock: (overrideResponse?: Partial<CryptoRailAddress>) => CryptoRailAddress;
export declare const getExecutePaymentTransferQuoteResponseMock: (overrideResponse?: Partial<Transfer>) => Transfer;
export declare const getGetPaymentTransferResponsePaymentMethodRequestMock: (overrideResponse?: Partial<PaymentMethodRequest>) => PaymentMethodRequest;
export declare const getGetPaymentTransferResponseCryptoRailAddressMock: (overrideResponse?: Partial<CryptoRailAddress>) => CryptoRailAddress;
export declare const getGetPaymentTransferResponseMock: (overrideResponse?: Partial<Transfer>) => Transfer;
export declare const getGetPaymentMethodsMockHandler: (overrideResponse?: PaymentMethod[] | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<PaymentMethod[]> | PaymentMethod[])) => import("msw").HttpHandler;
export declare const getGetCryptoRailsMockHandler: (overrideResponse?: CryptoRail[] | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<CryptoRail[]> | CryptoRail[])) => import("msw").HttpHandler;
export declare const getCreatePaymentTransferQuoteMockHandler: (overrideResponse?: CreatePaymentTransferQuote201 | ((info: Parameters<Parameters<typeof http.post>[1]>[0]) => Promise<CreatePaymentTransferQuote201> | CreatePaymentTransferQuote201)) => import("msw").HttpHandler;
export declare const getExecutePaymentTransferQuoteMockHandler: (overrideResponse?: Transfer | ((info: Parameters<Parameters<typeof http.post>[1]>[0]) => Promise<Transfer> | Transfer)) => import("msw").HttpHandler;
export declare const getGetPaymentTransferMockHandler: (overrideResponse?: Transfer | ((info: Parameters<Parameters<typeof http.get>[1]>[0]) => Promise<Transfer> | Transfer)) => import("msw").HttpHandler;
export declare const getPaymentsAlphaMock: () => import("msw").HttpHandler[];
//# sourceMappingURL=payments-alpha.msw.d.ts.map