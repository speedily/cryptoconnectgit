/**
 * Generated by orval v7.6.0 🍺
 * Do not edit manually.
 * Coinbase Developer Platform APIs
 * The Coinbase Developer Platform APIs - leading the world's transition onchain.
 * OpenAPI spec version: 2.0.0
 */
import { faker } from "@faker-js/faker";
import { HttpResponse, delay, http } from "msw";
export const getRequestEvmFaucetResponseMock = (overrideResponse = {}) => ({ transactionHash: faker.string.alpha(20), ...overrideResponse });
export const getRequestSolanaFaucetResponseMock = (overrideResponse = {}) => ({
    transactionSignature: faker.string.alpha(20),
    ...overrideResponse,
});
export const getRequestEvmFaucetMockHandler = (overrideResponse) => {
    return http.post("*/v2/evm/faucet", async (info) => {
        await delay(0);
        return new HttpResponse(JSON.stringify(overrideResponse !== undefined
            ? typeof overrideResponse === "function"
                ? await overrideResponse(info)
                : overrideResponse
            : getRequestEvmFaucetResponseMock()), { status: 200, headers: { "Content-Type": "application/json" } });
    });
};
export const getRequestSolanaFaucetMockHandler = (overrideResponse) => {
    return http.post("*/v2/solana/faucet", async (info) => {
        await delay(0);
        return new HttpResponse(JSON.stringify(overrideResponse !== undefined
            ? typeof overrideResponse === "function"
                ? await overrideResponse(info)
                : overrideResponse
            : getRequestSolanaFaucetResponseMock()), { status: 200, headers: { "Content-Type": "application/json" } });
    });
};
export const getFaucetsMock = () => [
    getRequestEvmFaucetMockHandler(),
    getRequestSolanaFaucetMockHandler(),
];
//# sourceMappingURL=faucets.msw.js.map