import { Address } from "viem";
import { abi as ERC20_ABI } from "../erc20/constants";
export declare const SUPPORTED_NETWORKS: string[];
export declare const COMET_ADDRESSES: Record<string, Address>;
export declare const ASSET_ADDRESSES: Record<string, Record<string, Address>>;
export { ERC20_ABI };
export declare const COMET_ABI: readonly [{
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "asset";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "amount";
        readonly type: "uint256";
    }];
    readonly name: "supply";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "asset";
        readonly type: "address";
    }, {
        readonly internalType: "uint256";
        readonly name: "amount";
        readonly type: "uint256";
    }];
    readonly name: "withdraw";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "priceFeed";
        readonly type: "address";
    }];
    readonly name: "getPrice";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "account";
        readonly type: "address";
    }];
    readonly name: "borrowBalanceOf";
    readonly outputs: readonly [{
        readonly internalType: "uint256";
        readonly name: "";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "numAssets";
    readonly outputs: readonly [{
        readonly internalType: "uint8";
        readonly name: "";
        readonly type: "uint8";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "uint8";
        readonly name: "i";
        readonly type: "uint8";
    }];
    readonly name: "getAssetInfo";
    readonly outputs: readonly [{
        readonly components: readonly [{
            readonly internalType: "uint8";
            readonly name: "offset";
            readonly type: "uint8";
        }, {
            readonly internalType: "address";
            readonly name: "asset";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "priceFeed";
            readonly type: "address";
        }, {
            readonly internalType: "uint64";
            readonly name: "scale";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "borrowCollateralFactor";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "liquidateCollateralFactor";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint64";
            readonly name: "liquidationFactor";
            readonly type: "uint64";
        }, {
            readonly internalType: "uint128";
            readonly name: "supplyCap";
            readonly type: "uint128";
        }];
        readonly internalType: "struct CometCore.AssetInfo";
        readonly name: "";
        readonly type: "tuple";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "baseToken";
    readonly outputs: readonly [{
        readonly internalType: "address";
        readonly name: "";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [];
    readonly name: "baseTokenPriceFeed";
    readonly outputs: readonly [{
        readonly internalType: "address";
        readonly name: "";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}, {
    readonly inputs: readonly [{
        readonly internalType: "address";
        readonly name: "account";
        readonly type: "address";
    }, {
        readonly internalType: "address";
        readonly name: "asset";
        readonly type: "address";
    }];
    readonly name: "collateralBalanceOf";
    readonly outputs: readonly [{
        readonly internalType: "uint128";
        readonly name: "balance";
        readonly type: "uint128";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}];
export declare const PRICE_FEED_ABI: readonly [{
    readonly inputs: readonly [];
    readonly name: "latestRoundData";
    readonly outputs: readonly [{
        readonly name: "roundId";
        readonly type: "uint80";
    }, {
        readonly name: "answer";
        readonly type: "int256";
    }, {
        readonly name: "startedAt";
        readonly type: "uint256";
    }, {
        readonly name: "updatedAt";
        readonly type: "uint256";
    }, {
        readonly name: "answeredInRound";
        readonly type: "uint80";
    }];
    readonly stateMutability: "view";
    readonly type: "function";
}];
