import { z } from "zod";
/**
 * Action schemas for the flaunch action provider.
 *
 * This file contains the Zod schemas that define the shape and validation
 * rules for action parameters in the flaunch action provider.
 */
/**
 * Schema for Flaunch token creation
 */
export declare const FlaunchSchema: z.ZodObject<{
    name: z.ZodString;
    symbol: z.ZodString;
    imageUrl: z.ZodString;
    description: z.ZodString;
    websiteUrl: z.ZodOptional<z.ZodString>;
    discordUrl: z.ZodOptional<z.ZodString>;
    twitterUrl: z.ZodOptional<z.ZodString>;
    telegramUrl: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    symbol: string;
    name: string;
    description: string;
    imageUrl: string;
    websiteUrl?: string | undefined;
    discordUrl?: string | undefined;
    twitterUrl?: string | undefined;
    telegramUrl?: string | undefined;
}, {
    symbol: string;
    name: string;
    description: string;
    imageUrl: string;
    websiteUrl?: string | undefined;
    discordUrl?: string | undefined;
    twitterUrl?: string | undefined;
    telegramUrl?: string | undefined;
}>;
export declare const BuyCoinWithETHInputSchema: z.ZodObject<{
    coinAddress: z.ZodString;
    amountIn: z.ZodString;
    slippagePercent: z.ZodDefault<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    amountIn: string;
    coinAddress: string;
    slippagePercent: number;
}, {
    amountIn: string;
    coinAddress: string;
    slippagePercent?: number | undefined;
}>;
export declare const BuyCoinWithCoinInputSchema: z.ZodObject<{
    coinAddress: z.ZodString;
    amountOut: z.ZodString;
    slippagePercent: z.ZodDefault<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    amountOut: string;
    coinAddress: string;
    slippagePercent: number;
}, {
    amountOut: string;
    coinAddress: string;
    slippagePercent?: number | undefined;
}>;
export declare const SellCoinSchema: z.ZodObject<{
    coinAddress: z.ZodString;
    amountIn: z.ZodString;
    slippagePercent: z.ZodDefault<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    amountIn: string;
    coinAddress: string;
    slippagePercent: number;
}, {
    amountIn: string;
    coinAddress: string;
    slippagePercent?: number | undefined;
}>;
