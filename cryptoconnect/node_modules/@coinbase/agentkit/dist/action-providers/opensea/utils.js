"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.chainIdToOpenseaChain = exports.supportedChains = void 0;
const opensea_js_1 = require("opensea-js");
/**
 * Supported Opensea chains
 */
exports.supportedChains = {
    "1": opensea_js_1.Chain.Mainnet,
    "137": opensea_js_1.Chain.Polygon,
    "80002": opensea_js_1.Chain.Amoy,
    "11155111": opensea_js_1.Chain.Sepolia,
    "8217": opensea_js_1.Chain.Klaytn,
    "1001": opensea_js_1.Chain.Baobab,
    "43114": opensea_js_1.Chain.Avalanche,
    "43113": opensea_js_1.Chain.Fuji,
    "42161": opensea_js_1.Chain.Arbitrum,
    "42170": opensea_js_1.Chain.ArbitrumNova,
    "421614": opensea_js_1.Chain.ArbitrumSepolia,
    "238": opensea_js_1.Chain.Blast,
    "168587773": opensea_js_1.Chain.BlastSepolia,
    "8453": opensea_js_1.Chain.Base,
    "84532": opensea_js_1.Chain.BaseSepolia,
    "10": opensea_js_1.Chain.Optimism,
    "11155420": opensea_js_1.Chain.OptimismSepolia,
    "7777777": opensea_js_1.Chain.Zora,
    "999999999": opensea_js_1.Chain.ZoraSepolia,
    "1329": opensea_js_1.Chain.Sei,
    "1328": opensea_js_1.Chain.SeiTestnet,
    "8333": opensea_js_1.Chain.B3,
    "1993": opensea_js_1.Chain.B3Sepolia,
    "80094": opensea_js_1.Chain.BeraChain,
};
/**
 * Maps EVM chain IDs to Opensea chain
 *
 * @param chainId - The EVM chain ID to map
 * @returns The corresponding OpenSea Chain enum value
 */
const chainIdToOpenseaChain = (chainId) => {
    const chain = exports.supportedChains[chainId];
    if (!chain) {
        throw new Error(`Unsupported chain ID on Opensea: ${chainId}`);
    }
    return chain;
};
exports.chainIdToOpenseaChain = chainIdToOpenseaChain;
