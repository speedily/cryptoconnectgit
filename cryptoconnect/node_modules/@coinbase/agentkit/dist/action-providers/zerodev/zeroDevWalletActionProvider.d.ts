import { ZeroDevWalletProvider } from "../../wallet-providers";
import { ActionProvider } from "../actionProvider";
import { Network } from "../../network";
import { GetCABSchema } from "./schemas";
import { z } from "zod";
/**
 * ZeroDevWalletActionProvider is an action provider for ZeroDevWalletProvider.
 *
 * This provider is used for any action that requires a ZeroDevWalletProvider.
 */
export declare class ZeroDevWalletActionProvider extends ActionProvider<ZeroDevWalletProvider> {
    /**
     * Constructs a new ZeroDevWalletActionProvider.
     */
    constructor();
    /**
     * Gets the chain abstracted balance for the wallet.
     *
     * @param walletProvider - The wallet provider to get the balance for.
     * @param args - The arguments for the action.
     * @returns The chain abstracted balance for the wallet.
     */
    getCAB(walletProvider: ZeroDevWalletProvider, args: z.infer<typeof GetCABSchema>): Promise<import("@zerodev/intent").GetCABResult>;
    /**
     * Checks if the ZeroDevWalletActionProvider supports the given network.
     *
     * @param network - The network to check.
     * @returns True if the ZeroDevWalletActionProvider supports the network, false otherwise.
     */
    supportsNetwork: (network: Network) => boolean;
}
export declare const zeroDevWalletActionProvider: () => ZeroDevWalletActionProvider;
