import Long from "long";
import _m0 from "protobufjs/minimal";
export declare const protobufPackage = "xmtp.mls.message_contents.content_types";
/**
 * wallet_send_calls.proto
 * This file defines the WalletSendCalls message type and is associated with the following ContentTypeId:
 *
 * ContentTypeId {
 *     authority_id: "xmtp.org",
 *     type_id:      "walletSendCalls",
 *     version_major: 1,
 *     version_minor: 0,
 * }
 */
/** WalletSendCalls represents parameters for sending wallet calls */
export interface WalletSendCalls {
    version: string;
    /** hex chain id, e.g., "0x1" */
    chainId: string;
    /** hex address of the sender, e.g., "0xabc..." */
    from: string;
    calls: Call[];
    /** wallet capabilities to request or configure */
    capabilities: {
        [key: string]: string;
    };
}
export interface WalletSendCalls_CapabilitiesEntry {
    key: string;
    value: string;
}
/** Call represents an individual transaction call */
export interface Call {
    /** destination address */
    to: string;
    /** call data payload */
    data: string;
    /** hex value to send */
    value: string;
    /** hex gas limit */
    gas: string;
    /** metadata for the call */
    metadata: {
        [key: string]: string;
    };
}
export interface Call_MetadataEntry {
    key: string;
    value: string;
}
export declare const WalletSendCalls: {
    encode(message: WalletSendCalls, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): WalletSendCalls;
    fromJSON(object: any): WalletSendCalls;
    toJSON(message: WalletSendCalls): unknown;
    fromPartial<I extends {
        version?: string | undefined;
        chainId?: string | undefined;
        from?: string | undefined;
        calls?: {
            to?: string | undefined;
            data?: string | undefined;
            value?: string | undefined;
            gas?: string | undefined;
            metadata?: {
                [x: string]: string | undefined;
            } | undefined;
        }[] | undefined;
        capabilities?: {
            [x: string]: string | undefined;
        } | undefined;
    } & {
        version?: string | undefined;
        chainId?: string | undefined;
        from?: string | undefined;
        calls?: ({
            to?: string | undefined;
            data?: string | undefined;
            value?: string | undefined;
            gas?: string | undefined;
            metadata?: {
                [x: string]: string | undefined;
            } | undefined;
        }[] & ({
            to?: string | undefined;
            data?: string | undefined;
            value?: string | undefined;
            gas?: string | undefined;
            metadata?: {
                [x: string]: string | undefined;
            } | undefined;
        } & {
            to?: string | undefined;
            data?: string | undefined;
            value?: string | undefined;
            gas?: string | undefined;
            metadata?: ({
                [x: string]: string | undefined;
            } & {
                [x: string]: string | undefined;
            } & { [K in Exclude<keyof I["calls"][number]["metadata"], string | number>]: never; }) | undefined;
        } & { [K_1 in Exclude<keyof I["calls"][number], keyof Call>]: never; })[] & { [K_2 in Exclude<keyof I["calls"], keyof {
            to?: string | undefined;
            data?: string | undefined;
            value?: string | undefined;
            gas?: string | undefined;
            metadata?: {
                [x: string]: string | undefined;
            } | undefined;
        }[]>]: never; }) | undefined;
        capabilities?: ({
            [x: string]: string | undefined;
        } & {
            [x: string]: string | undefined;
        } & { [K_3 in Exclude<keyof I["capabilities"], string | number>]: never; }) | undefined;
    } & { [K_4 in Exclude<keyof I, keyof WalletSendCalls>]: never; }>(object: I): WalletSendCalls;
};
export declare const WalletSendCalls_CapabilitiesEntry: {
    encode(message: WalletSendCalls_CapabilitiesEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): WalletSendCalls_CapabilitiesEntry;
    fromJSON(object: any): WalletSendCalls_CapabilitiesEntry;
    toJSON(message: WalletSendCalls_CapabilitiesEntry): unknown;
    fromPartial<I extends {
        key?: string | undefined;
        value?: string | undefined;
    } & {
        key?: string | undefined;
        value?: string | undefined;
    } & { [K in Exclude<keyof I, keyof WalletSendCalls_CapabilitiesEntry>]: never; }>(object: I): WalletSendCalls_CapabilitiesEntry;
};
export declare const Call: {
    encode(message: Call, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): Call;
    fromJSON(object: any): Call;
    toJSON(message: Call): unknown;
    fromPartial<I extends {
        to?: string | undefined;
        data?: string | undefined;
        value?: string | undefined;
        gas?: string | undefined;
        metadata?: {
            [x: string]: string | undefined;
        } | undefined;
    } & {
        to?: string | undefined;
        data?: string | undefined;
        value?: string | undefined;
        gas?: string | undefined;
        metadata?: ({
            [x: string]: string | undefined;
        } & {
            [x: string]: string | undefined;
        } & { [K in Exclude<keyof I["metadata"], string | number>]: never; }) | undefined;
    } & { [K_1 in Exclude<keyof I, keyof Call>]: never; }>(object: I): Call;
};
export declare const Call_MetadataEntry: {
    encode(message: Call_MetadataEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): Call_MetadataEntry;
    fromJSON(object: any): Call_MetadataEntry;
    toJSON(message: Call_MetadataEntry): unknown;
    fromPartial<I extends {
        key?: string | undefined;
        value?: string | undefined;
    } & {
        key?: string | undefined;
        value?: string | undefined;
    } & { [K in Exclude<keyof I, keyof Call_MetadataEntry>]: never; }>(object: I): Call_MetadataEntry;
};
declare type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
export declare type DeepPartial<T> = T extends Builtin ? T : T extends Long ? string | number | Long : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
declare type KeysOfUnion<T> = T extends T ? keyof T : never;
export declare type Exact<P, I extends P> = P extends Builtin ? P : P & {
    [K in keyof P]: Exact<P[K], I[K]>;
} & {
    [K in Exclude<keyof I, KeysOfUnion<P>>]: never;
};
export {};
