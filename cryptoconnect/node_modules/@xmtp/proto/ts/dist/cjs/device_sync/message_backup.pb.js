"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GroupMessageSave = exports.contentTypeSaveToJSON = exports.contentTypeSaveFromJSON = exports.ContentTypeSave = exports.deliveryStatusSaveToJSON = exports.deliveryStatusSaveFromJSON = exports.DeliveryStatusSave = exports.groupMessageKindSaveToJSON = exports.groupMessageKindSaveFromJSON = exports.GroupMessageKindSave = exports.protobufPackage = void 0;
/* eslint-disable */
const long_1 = __importDefault(require("long"));
const minimal_1 = __importDefault(require("protobufjs/minimal"));
exports.protobufPackage = "xmtp.device_sync.message_backup";
/** Definitions for backups */
/** Group message kind */
var GroupMessageKindSave;
(function (GroupMessageKindSave) {
    GroupMessageKindSave[GroupMessageKindSave["GROUP_MESSAGE_KIND_SAVE_UNSPECIFIED"] = 0] = "GROUP_MESSAGE_KIND_SAVE_UNSPECIFIED";
    GroupMessageKindSave[GroupMessageKindSave["GROUP_MESSAGE_KIND_SAVE_APPLICATION"] = 1] = "GROUP_MESSAGE_KIND_SAVE_APPLICATION";
    GroupMessageKindSave[GroupMessageKindSave["GROUP_MESSAGE_KIND_SAVE_MEMBERSHIP_CHANGE"] = 2] = "GROUP_MESSAGE_KIND_SAVE_MEMBERSHIP_CHANGE";
    GroupMessageKindSave[GroupMessageKindSave["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(GroupMessageKindSave = exports.GroupMessageKindSave || (exports.GroupMessageKindSave = {}));
function groupMessageKindSaveFromJSON(object) {
    switch (object) {
        case 0:
        case "GROUP_MESSAGE_KIND_SAVE_UNSPECIFIED":
            return GroupMessageKindSave.GROUP_MESSAGE_KIND_SAVE_UNSPECIFIED;
        case 1:
        case "GROUP_MESSAGE_KIND_SAVE_APPLICATION":
            return GroupMessageKindSave.GROUP_MESSAGE_KIND_SAVE_APPLICATION;
        case 2:
        case "GROUP_MESSAGE_KIND_SAVE_MEMBERSHIP_CHANGE":
            return GroupMessageKindSave.GROUP_MESSAGE_KIND_SAVE_MEMBERSHIP_CHANGE;
        case -1:
        case "UNRECOGNIZED":
        default:
            return GroupMessageKindSave.UNRECOGNIZED;
    }
}
exports.groupMessageKindSaveFromJSON = groupMessageKindSaveFromJSON;
function groupMessageKindSaveToJSON(object) {
    switch (object) {
        case GroupMessageKindSave.GROUP_MESSAGE_KIND_SAVE_UNSPECIFIED:
            return "GROUP_MESSAGE_KIND_SAVE_UNSPECIFIED";
        case GroupMessageKindSave.GROUP_MESSAGE_KIND_SAVE_APPLICATION:
            return "GROUP_MESSAGE_KIND_SAVE_APPLICATION";
        case GroupMessageKindSave.GROUP_MESSAGE_KIND_SAVE_MEMBERSHIP_CHANGE:
            return "GROUP_MESSAGE_KIND_SAVE_MEMBERSHIP_CHANGE";
        case GroupMessageKindSave.UNRECOGNIZED:
        default:
            return "UNRECOGNIZED";
    }
}
exports.groupMessageKindSaveToJSON = groupMessageKindSaveToJSON;
/** Group message delivery status */
var DeliveryStatusSave;
(function (DeliveryStatusSave) {
    DeliveryStatusSave[DeliveryStatusSave["DELIVERY_STATUS_SAVE_UNSPECIFIED"] = 0] = "DELIVERY_STATUS_SAVE_UNSPECIFIED";
    DeliveryStatusSave[DeliveryStatusSave["DELIVERY_STATUS_SAVE_UNPUBLISHED"] = 1] = "DELIVERY_STATUS_SAVE_UNPUBLISHED";
    DeliveryStatusSave[DeliveryStatusSave["DELIVERY_STATUS_SAVE_PUBLISHED"] = 2] = "DELIVERY_STATUS_SAVE_PUBLISHED";
    DeliveryStatusSave[DeliveryStatusSave["DELIVERY_STATUS_SAVE_FAILED"] = 3] = "DELIVERY_STATUS_SAVE_FAILED";
    DeliveryStatusSave[DeliveryStatusSave["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(DeliveryStatusSave = exports.DeliveryStatusSave || (exports.DeliveryStatusSave = {}));
function deliveryStatusSaveFromJSON(object) {
    switch (object) {
        case 0:
        case "DELIVERY_STATUS_SAVE_UNSPECIFIED":
            return DeliveryStatusSave.DELIVERY_STATUS_SAVE_UNSPECIFIED;
        case 1:
        case "DELIVERY_STATUS_SAVE_UNPUBLISHED":
            return DeliveryStatusSave.DELIVERY_STATUS_SAVE_UNPUBLISHED;
        case 2:
        case "DELIVERY_STATUS_SAVE_PUBLISHED":
            return DeliveryStatusSave.DELIVERY_STATUS_SAVE_PUBLISHED;
        case 3:
        case "DELIVERY_STATUS_SAVE_FAILED":
            return DeliveryStatusSave.DELIVERY_STATUS_SAVE_FAILED;
        case -1:
        case "UNRECOGNIZED":
        default:
            return DeliveryStatusSave.UNRECOGNIZED;
    }
}
exports.deliveryStatusSaveFromJSON = deliveryStatusSaveFromJSON;
function deliveryStatusSaveToJSON(object) {
    switch (object) {
        case DeliveryStatusSave.DELIVERY_STATUS_SAVE_UNSPECIFIED:
            return "DELIVERY_STATUS_SAVE_UNSPECIFIED";
        case DeliveryStatusSave.DELIVERY_STATUS_SAVE_UNPUBLISHED:
            return "DELIVERY_STATUS_SAVE_UNPUBLISHED";
        case DeliveryStatusSave.DELIVERY_STATUS_SAVE_PUBLISHED:
            return "DELIVERY_STATUS_SAVE_PUBLISHED";
        case DeliveryStatusSave.DELIVERY_STATUS_SAVE_FAILED:
            return "DELIVERY_STATUS_SAVE_FAILED";
        case DeliveryStatusSave.UNRECOGNIZED:
        default:
            return "UNRECOGNIZED";
    }
}
exports.deliveryStatusSaveToJSON = deliveryStatusSaveToJSON;
/** Group message content type */
var ContentTypeSave;
(function (ContentTypeSave) {
    ContentTypeSave[ContentTypeSave["CONTENT_TYPE_SAVE_UNSPECIFIED"] = 0] = "CONTENT_TYPE_SAVE_UNSPECIFIED";
    ContentTypeSave[ContentTypeSave["CONTENT_TYPE_SAVE_UNKNOWN"] = 1] = "CONTENT_TYPE_SAVE_UNKNOWN";
    ContentTypeSave[ContentTypeSave["CONTENT_TYPE_SAVE_TEXT"] = 2] = "CONTENT_TYPE_SAVE_TEXT";
    ContentTypeSave[ContentTypeSave["CONTENT_TYPE_SAVE_GROUP_MEMBERSHIP_CHANGE"] = 3] = "CONTENT_TYPE_SAVE_GROUP_MEMBERSHIP_CHANGE";
    ContentTypeSave[ContentTypeSave["CONTENT_TYPE_SAVE_GROUP_UPDATED"] = 4] = "CONTENT_TYPE_SAVE_GROUP_UPDATED";
    ContentTypeSave[ContentTypeSave["CONTENT_TYPE_SAVE_REACTION"] = 5] = "CONTENT_TYPE_SAVE_REACTION";
    ContentTypeSave[ContentTypeSave["CONTENT_TYPE_SAVE_READ_RECEIPT"] = 6] = "CONTENT_TYPE_SAVE_READ_RECEIPT";
    ContentTypeSave[ContentTypeSave["CONTENT_TYPE_SAVE_REPLY"] = 7] = "CONTENT_TYPE_SAVE_REPLY";
    ContentTypeSave[ContentTypeSave["CONTENT_TYPE_SAVE_ATTACHMENT"] = 8] = "CONTENT_TYPE_SAVE_ATTACHMENT";
    ContentTypeSave[ContentTypeSave["CONTENT_TYPE_SAVE_REMOTE_ATTACHMENT"] = 9] = "CONTENT_TYPE_SAVE_REMOTE_ATTACHMENT";
    ContentTypeSave[ContentTypeSave["CONTENT_TYPE_SAVE_TRANSACTION_REFERENCE"] = 10] = "CONTENT_TYPE_SAVE_TRANSACTION_REFERENCE";
    ContentTypeSave[ContentTypeSave["UNRECOGNIZED"] = -1] = "UNRECOGNIZED";
})(ContentTypeSave = exports.ContentTypeSave || (exports.ContentTypeSave = {}));
function contentTypeSaveFromJSON(object) {
    switch (object) {
        case 0:
        case "CONTENT_TYPE_SAVE_UNSPECIFIED":
            return ContentTypeSave.CONTENT_TYPE_SAVE_UNSPECIFIED;
        case 1:
        case "CONTENT_TYPE_SAVE_UNKNOWN":
            return ContentTypeSave.CONTENT_TYPE_SAVE_UNKNOWN;
        case 2:
        case "CONTENT_TYPE_SAVE_TEXT":
            return ContentTypeSave.CONTENT_TYPE_SAVE_TEXT;
        case 3:
        case "CONTENT_TYPE_SAVE_GROUP_MEMBERSHIP_CHANGE":
            return ContentTypeSave.CONTENT_TYPE_SAVE_GROUP_MEMBERSHIP_CHANGE;
        case 4:
        case "CONTENT_TYPE_SAVE_GROUP_UPDATED":
            return ContentTypeSave.CONTENT_TYPE_SAVE_GROUP_UPDATED;
        case 5:
        case "CONTENT_TYPE_SAVE_REACTION":
            return ContentTypeSave.CONTENT_TYPE_SAVE_REACTION;
        case 6:
        case "CONTENT_TYPE_SAVE_READ_RECEIPT":
            return ContentTypeSave.CONTENT_TYPE_SAVE_READ_RECEIPT;
        case 7:
        case "CONTENT_TYPE_SAVE_REPLY":
            return ContentTypeSave.CONTENT_TYPE_SAVE_REPLY;
        case 8:
        case "CONTENT_TYPE_SAVE_ATTACHMENT":
            return ContentTypeSave.CONTENT_TYPE_SAVE_ATTACHMENT;
        case 9:
        case "CONTENT_TYPE_SAVE_REMOTE_ATTACHMENT":
            return ContentTypeSave.CONTENT_TYPE_SAVE_REMOTE_ATTACHMENT;
        case 10:
        case "CONTENT_TYPE_SAVE_TRANSACTION_REFERENCE":
            return ContentTypeSave.CONTENT_TYPE_SAVE_TRANSACTION_REFERENCE;
        case -1:
        case "UNRECOGNIZED":
        default:
            return ContentTypeSave.UNRECOGNIZED;
    }
}
exports.contentTypeSaveFromJSON = contentTypeSaveFromJSON;
function contentTypeSaveToJSON(object) {
    switch (object) {
        case ContentTypeSave.CONTENT_TYPE_SAVE_UNSPECIFIED:
            return "CONTENT_TYPE_SAVE_UNSPECIFIED";
        case ContentTypeSave.CONTENT_TYPE_SAVE_UNKNOWN:
            return "CONTENT_TYPE_SAVE_UNKNOWN";
        case ContentTypeSave.CONTENT_TYPE_SAVE_TEXT:
            return "CONTENT_TYPE_SAVE_TEXT";
        case ContentTypeSave.CONTENT_TYPE_SAVE_GROUP_MEMBERSHIP_CHANGE:
            return "CONTENT_TYPE_SAVE_GROUP_MEMBERSHIP_CHANGE";
        case ContentTypeSave.CONTENT_TYPE_SAVE_GROUP_UPDATED:
            return "CONTENT_TYPE_SAVE_GROUP_UPDATED";
        case ContentTypeSave.CONTENT_TYPE_SAVE_REACTION:
            return "CONTENT_TYPE_SAVE_REACTION";
        case ContentTypeSave.CONTENT_TYPE_SAVE_READ_RECEIPT:
            return "CONTENT_TYPE_SAVE_READ_RECEIPT";
        case ContentTypeSave.CONTENT_TYPE_SAVE_REPLY:
            return "CONTENT_TYPE_SAVE_REPLY";
        case ContentTypeSave.CONTENT_TYPE_SAVE_ATTACHMENT:
            return "CONTENT_TYPE_SAVE_ATTACHMENT";
        case ContentTypeSave.CONTENT_TYPE_SAVE_REMOTE_ATTACHMENT:
            return "CONTENT_TYPE_SAVE_REMOTE_ATTACHMENT";
        case ContentTypeSave.CONTENT_TYPE_SAVE_TRANSACTION_REFERENCE:
            return "CONTENT_TYPE_SAVE_TRANSACTION_REFERENCE";
        case ContentTypeSave.UNRECOGNIZED:
        default:
            return "UNRECOGNIZED";
    }
}
exports.contentTypeSaveToJSON = contentTypeSaveToJSON;
function createBaseGroupMessageSave() {
    return {
        id: new Uint8Array(),
        groupId: new Uint8Array(),
        decryptedMessageBytes: new Uint8Array(),
        sentAtNs: long_1.default.ZERO,
        kind: 0,
        senderInstallationId: new Uint8Array(),
        senderInboxId: "",
        deliveryStatus: 0,
        contentType: 0,
        versionMajor: 0,
        versionMinor: 0,
        authorityId: "",
        referenceId: undefined,
        sequenceId: undefined,
        originatorId: undefined,
    };
}
exports.GroupMessageSave = {
    encode(message, writer = minimal_1.default.Writer.create()) {
        if (message.id.length !== 0) {
            writer.uint32(10).bytes(message.id);
        }
        if (message.groupId.length !== 0) {
            writer.uint32(18).bytes(message.groupId);
        }
        if (message.decryptedMessageBytes.length !== 0) {
            writer.uint32(26).bytes(message.decryptedMessageBytes);
        }
        if (!message.sentAtNs.isZero()) {
            writer.uint32(32).int64(message.sentAtNs);
        }
        if (message.kind !== 0) {
            writer.uint32(40).int32(message.kind);
        }
        if (message.senderInstallationId.length !== 0) {
            writer.uint32(50).bytes(message.senderInstallationId);
        }
        if (message.senderInboxId !== "") {
            writer.uint32(58).string(message.senderInboxId);
        }
        if (message.deliveryStatus !== 0) {
            writer.uint32(64).int32(message.deliveryStatus);
        }
        if (message.contentType !== 0) {
            writer.uint32(72).int32(message.contentType);
        }
        if (message.versionMajor !== 0) {
            writer.uint32(80).int32(message.versionMajor);
        }
        if (message.versionMinor !== 0) {
            writer.uint32(88).int32(message.versionMinor);
        }
        if (message.authorityId !== "") {
            writer.uint32(98).string(message.authorityId);
        }
        if (message.referenceId !== undefined) {
            writer.uint32(106).bytes(message.referenceId);
        }
        if (message.sequenceId !== undefined) {
            writer.uint32(112).int64(message.sequenceId);
        }
        if (message.originatorId !== undefined) {
            writer.uint32(120).int64(message.originatorId);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGroupMessageSave();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.id = reader.bytes();
                    break;
                case 2:
                    message.groupId = reader.bytes();
                    break;
                case 3:
                    message.decryptedMessageBytes = reader.bytes();
                    break;
                case 4:
                    message.sentAtNs = reader.int64();
                    break;
                case 5:
                    message.kind = reader.int32();
                    break;
                case 6:
                    message.senderInstallationId = reader.bytes();
                    break;
                case 7:
                    message.senderInboxId = reader.string();
                    break;
                case 8:
                    message.deliveryStatus = reader.int32();
                    break;
                case 9:
                    message.contentType = reader.int32();
                    break;
                case 10:
                    message.versionMajor = reader.int32();
                    break;
                case 11:
                    message.versionMinor = reader.int32();
                    break;
                case 12:
                    message.authorityId = reader.string();
                    break;
                case 13:
                    message.referenceId = reader.bytes();
                    break;
                case 14:
                    message.sequenceId = reader.int64();
                    break;
                case 15:
                    message.originatorId = reader.int64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        return {
            id: isSet(object.id) ? bytesFromBase64(object.id) : new Uint8Array(),
            groupId: isSet(object.groupId)
                ? bytesFromBase64(object.groupId)
                : new Uint8Array(),
            decryptedMessageBytes: isSet(object.decryptedMessageBytes)
                ? bytesFromBase64(object.decryptedMessageBytes)
                : new Uint8Array(),
            sentAtNs: isSet(object.sentAtNs)
                ? long_1.default.fromValue(object.sentAtNs)
                : long_1.default.ZERO,
            kind: isSet(object.kind) ? groupMessageKindSaveFromJSON(object.kind) : 0,
            senderInstallationId: isSet(object.senderInstallationId)
                ? bytesFromBase64(object.senderInstallationId)
                : new Uint8Array(),
            senderInboxId: isSet(object.senderInboxId)
                ? String(object.senderInboxId)
                : "",
            deliveryStatus: isSet(object.deliveryStatus)
                ? deliveryStatusSaveFromJSON(object.deliveryStatus)
                : 0,
            contentType: isSet(object.contentType)
                ? contentTypeSaveFromJSON(object.contentType)
                : 0,
            versionMajor: isSet(object.versionMajor)
                ? Number(object.versionMajor)
                : 0,
            versionMinor: isSet(object.versionMinor)
                ? Number(object.versionMinor)
                : 0,
            authorityId: isSet(object.authorityId) ? String(object.authorityId) : "",
            referenceId: isSet(object.referenceId)
                ? bytesFromBase64(object.referenceId)
                : undefined,
            sequenceId: isSet(object.sequenceId)
                ? long_1.default.fromValue(object.sequenceId)
                : undefined,
            originatorId: isSet(object.originatorId)
                ? long_1.default.fromValue(object.originatorId)
                : undefined,
        };
    },
    toJSON(message) {
        const obj = {};
        message.id !== undefined &&
            (obj.id = base64FromBytes(message.id !== undefined ? message.id : new Uint8Array()));
        message.groupId !== undefined &&
            (obj.groupId = base64FromBytes(message.groupId !== undefined ? message.groupId : new Uint8Array()));
        message.decryptedMessageBytes !== undefined &&
            (obj.decryptedMessageBytes = base64FromBytes(message.decryptedMessageBytes !== undefined
                ? message.decryptedMessageBytes
                : new Uint8Array()));
        message.sentAtNs !== undefined &&
            (obj.sentAtNs = (message.sentAtNs || long_1.default.ZERO).toString());
        message.kind !== undefined &&
            (obj.kind = groupMessageKindSaveToJSON(message.kind));
        message.senderInstallationId !== undefined &&
            (obj.senderInstallationId = base64FromBytes(message.senderInstallationId !== undefined
                ? message.senderInstallationId
                : new Uint8Array()));
        message.senderInboxId !== undefined &&
            (obj.senderInboxId = message.senderInboxId);
        message.deliveryStatus !== undefined &&
            (obj.deliveryStatus = deliveryStatusSaveToJSON(message.deliveryStatus));
        message.contentType !== undefined &&
            (obj.contentType = contentTypeSaveToJSON(message.contentType));
        message.versionMajor !== undefined &&
            (obj.versionMajor = Math.round(message.versionMajor));
        message.versionMinor !== undefined &&
            (obj.versionMinor = Math.round(message.versionMinor));
        message.authorityId !== undefined &&
            (obj.authorityId = message.authorityId);
        message.referenceId !== undefined &&
            (obj.referenceId =
                message.referenceId !== undefined
                    ? base64FromBytes(message.referenceId)
                    : undefined);
        message.sequenceId !== undefined &&
            (obj.sequenceId = (message.sequenceId || undefined).toString());
        message.originatorId !== undefined &&
            (obj.originatorId = (message.originatorId || undefined).toString());
        return obj;
    },
    fromPartial(object) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;
        const message = createBaseGroupMessageSave();
        message.id = (_a = object.id) !== null && _a !== void 0 ? _a : new Uint8Array();
        message.groupId = (_b = object.groupId) !== null && _b !== void 0 ? _b : new Uint8Array();
        message.decryptedMessageBytes =
            (_c = object.decryptedMessageBytes) !== null && _c !== void 0 ? _c : new Uint8Array();
        message.sentAtNs =
            object.sentAtNs !== undefined && object.sentAtNs !== null
                ? long_1.default.fromValue(object.sentAtNs)
                : long_1.default.ZERO;
        message.kind = (_d = object.kind) !== null && _d !== void 0 ? _d : 0;
        message.senderInstallationId =
            (_e = object.senderInstallationId) !== null && _e !== void 0 ? _e : new Uint8Array();
        message.senderInboxId = (_f = object.senderInboxId) !== null && _f !== void 0 ? _f : "";
        message.deliveryStatus = (_g = object.deliveryStatus) !== null && _g !== void 0 ? _g : 0;
        message.contentType = (_h = object.contentType) !== null && _h !== void 0 ? _h : 0;
        message.versionMajor = (_j = object.versionMajor) !== null && _j !== void 0 ? _j : 0;
        message.versionMinor = (_k = object.versionMinor) !== null && _k !== void 0 ? _k : 0;
        message.authorityId = (_l = object.authorityId) !== null && _l !== void 0 ? _l : "";
        message.referenceId = (_m = object.referenceId) !== null && _m !== void 0 ? _m : undefined;
        message.sequenceId =
            object.sequenceId !== undefined && object.sequenceId !== null
                ? long_1.default.fromValue(object.sequenceId)
                : undefined;
        message.originatorId =
            object.originatorId !== undefined && object.originatorId !== null
                ? long_1.default.fromValue(object.originatorId)
                : undefined;
        return message;
    },
};
var globalThis = (() => {
    if (typeof globalThis !== "undefined")
        return globalThis;
    if (typeof self !== "undefined")
        return self;
    if (typeof window !== "undefined")
        return window;
    if (typeof global !== "undefined")
        return global;
    throw "Unable to locate global object";
})();
function bytesFromBase64(b64) {
    if (globalThis.Buffer) {
        return Uint8Array.from(globalThis.Buffer.from(b64, "base64"));
    }
    else {
        const bin = globalThis.atob(b64);
        const arr = new Uint8Array(bin.length);
        for (let i = 0; i < bin.length; ++i) {
            arr[i] = bin.charCodeAt(i);
        }
        return arr;
    }
}
function base64FromBytes(arr) {
    if (globalThis.Buffer) {
        return globalThis.Buffer.from(arr).toString("base64");
    }
    else {
        const bin = [];
        arr.forEach((byte) => {
            bin.push(String.fromCharCode(byte));
        });
        return globalThis.btoa(bin.join(""));
    }
}
if (minimal_1.default.util.Long !== long_1.default) {
    minimal_1.default.util.Long = long_1.default;
    minimal_1.default.configure();
}
function isSet(value) {
    return value !== null && value !== undefined;
}
//# sourceMappingURL=message_backup.pb.js.map