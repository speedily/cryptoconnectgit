import { Address, Hex } from "viem";
export declare function getUpdateDepositTypedData({ signerAddress, originChainId, depositId, updatedMessage, updatedOutputAmount, updatedRecipient, }: {
    signerAddress: Address;
    originChainId: bigint | number;
    depositId: bigint | number;
    updatedOutputAmount: bigint;
    updatedRecipient: Address;
    updatedMessage: Hex;
}): {
    readonly account: `0x${string}`;
    readonly domain: {
        readonly name: "ACROSS-V2";
        readonly version: "1.0.0";
        readonly chainId: number;
    };
    readonly types: {
        readonly UpdateDepositDetails: readonly [{
            readonly name: "depositId";
            readonly type: "uint256";
        }, {
            readonly name: "originChainId";
            readonly type: "uint256";
        }, {
            readonly name: "updatedOutputAmount";
            readonly type: "uint256";
        }, {
            readonly name: "updatedRecipient";
            readonly type: "address";
        }, {
            readonly name: "updatedMessage";
            readonly type: "bytes";
        }];
    };
    readonly primaryType: "UpdateDepositDetails";
    readonly message: {
        readonly depositId: bigint;
        readonly originChainId: bigint;
        readonly updatedOutputAmount: bigint;
        readonly updatedRecipient: `0x${string}`;
        readonly updatedMessage: `0x${string}`;
    };
};
export declare function getUpdateDepositTypedDataV3_5({ signerAddress, originChainId, depositId, updatedMessage, updatedOutputAmount, updatedRecipient, }: {
    signerAddress: Address;
    originChainId: number | bigint;
    depositId: number | bigint;
    updatedOutputAmount: bigint;
    updatedRecipient: Address;
    updatedMessage: Hex;
}): {
    readonly account: `0x${string}`;
    readonly domain: {
        readonly name: "ACROSS-V2";
        readonly version: "1.0.0";
        readonly chainId: number;
    };
    readonly types: {
        readonly UpdateDepositDetails: readonly [{
            readonly name: "depositId";
            readonly type: "uint256";
        }, {
            readonly name: "originChainId";
            readonly type: "uint256";
        }, {
            readonly name: "updatedOutputAmount";
            readonly type: "uint256";
        }, {
            readonly name: "updatedRecipient";
            readonly type: "bytes32";
        }, {
            readonly name: "updatedMessage";
            readonly type: "bytes";
        }];
    };
    readonly primaryType: "UpdateDepositDetails";
    readonly message: {
        readonly depositId: bigint;
        readonly originChainId: bigint;
        readonly updatedOutputAmount: bigint;
        readonly updatedRecipient: `0x${string}`;
        readonly updatedMessage: `0x${string}`;
    };
};
//# sourceMappingURL=typedData.d.ts.map