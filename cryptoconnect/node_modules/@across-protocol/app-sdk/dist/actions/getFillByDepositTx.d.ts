import { LoggerT } from "../utils/index.js";
import { Address, Hash, Hex, PublicClient, TransactionReceipt } from "viem";
import { FillEventLog } from "../types/index.js";
export type GetFillByDepositTxParams = {
    deposit: {
        depositId: bigint | number;
        depositTxHash?: Hash;
        originChainId: number;
        destinationChainId: number;
        destinationSpokePoolAddress: Address;
        message: Hex;
    };
    destinationChainClient: PublicClient;
    fromBlock?: bigint;
    indexerUrl?: string;
    logger?: LoggerT;
};
export declare function getFillByDepositTx(params: GetFillByDepositTxParams): Promise<FillStatus>;
export type FillStatus = {
    actionSuccess?: boolean;
    fillTxReceipt: TransactionReceipt;
    fillTxTimestamp: bigint;
    parsedFillEvent: FillEventLog;
};
export declare function waitForFillByDepositTx(params: GetFillByDepositTxParams & {
    pollingInterval?: number;
}): ReturnType<typeof getFillByDepositTx>;
export declare function getFillLogs(params: GetFillByDepositTxParams): Promise<import("viem").GetLogsReturnType<{
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "inputToken";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "outputToken";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "inputAmount";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "outputAmount";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "repaymentChainId";
        readonly type: "uint256";
    }, {
        readonly indexed: true;
        readonly internalType: "uint256";
        readonly name: "originChainId";
        readonly type: "uint256";
    }, {
        readonly indexed: true;
        readonly internalType: "uint32";
        readonly name: "depositId";
        readonly type: "uint32";
    }, {
        readonly indexed: false;
        readonly internalType: "uint32";
        readonly name: "fillDeadline";
        readonly type: "uint32";
    }, {
        readonly indexed: false;
        readonly internalType: "uint32";
        readonly name: "exclusivityDeadline";
        readonly type: "uint32";
    }, {
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "exclusiveRelayer";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "relayer";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "depositor";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "recipient";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "bytes";
        readonly name: "message";
        readonly type: "bytes";
    }, {
        readonly components: readonly [{
            readonly internalType: "address";
            readonly name: "updatedRecipient";
            readonly type: "address";
        }, {
            readonly internalType: "bytes";
            readonly name: "updatedMessage";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint256";
            readonly name: "updatedOutputAmount";
            readonly type: "uint256";
        }, {
            readonly internalType: "enum V3SpokePoolInterface.FillType";
            readonly name: "fillType";
            readonly type: "uint8";
        }];
        readonly indexed: false;
        readonly internalType: "struct V3SpokePoolInterface.V3RelayExecutionEventInfo";
        readonly name: "relayExecutionInfo";
        readonly type: "tuple";
    }];
    readonly name: "FilledV3Relay";
    readonly type: "event";
}, [{
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "inputToken";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "outputToken";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "inputAmount";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "outputAmount";
        readonly type: "uint256";
    }, {
        readonly indexed: false;
        readonly internalType: "uint256";
        readonly name: "repaymentChainId";
        readonly type: "uint256";
    }, {
        readonly indexed: true;
        readonly internalType: "uint256";
        readonly name: "originChainId";
        readonly type: "uint256";
    }, {
        readonly indexed: true;
        readonly internalType: "uint32";
        readonly name: "depositId";
        readonly type: "uint32";
    }, {
        readonly indexed: false;
        readonly internalType: "uint32";
        readonly name: "fillDeadline";
        readonly type: "uint32";
    }, {
        readonly indexed: false;
        readonly internalType: "uint32";
        readonly name: "exclusivityDeadline";
        readonly type: "uint32";
    }, {
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "exclusiveRelayer";
        readonly type: "address";
    }, {
        readonly indexed: true;
        readonly internalType: "address";
        readonly name: "relayer";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "depositor";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "address";
        readonly name: "recipient";
        readonly type: "address";
    }, {
        readonly indexed: false;
        readonly internalType: "bytes";
        readonly name: "message";
        readonly type: "bytes";
    }, {
        readonly components: readonly [{
            readonly internalType: "address";
            readonly name: "updatedRecipient";
            readonly type: "address";
        }, {
            readonly internalType: "bytes";
            readonly name: "updatedMessage";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint256";
            readonly name: "updatedOutputAmount";
            readonly type: "uint256";
        }, {
            readonly internalType: "enum V3SpokePoolInterface.FillType";
            readonly name: "fillType";
            readonly type: "uint8";
        }];
        readonly indexed: false;
        readonly internalType: "struct V3SpokePoolInterface.V3RelayExecutionEventInfo";
        readonly name: "relayExecutionInfo";
        readonly type: "tuple";
    }];
    readonly name: "FilledV3Relay";
    readonly type: "event";
}], undefined, bigint, undefined>>;
//# sourceMappingURL=getFillByDepositTx.d.ts.map