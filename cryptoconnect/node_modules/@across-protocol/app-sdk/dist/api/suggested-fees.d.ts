import z from "zod";
export declare const suggestedFeesResponseJsonSchema: z.ZodObject<{
    estimatedFillTimeSec: z.ZodNumber;
    capitalFeePct: z.ZodString;
    capitalFeeTotal: z.ZodString;
    relayGasFeePct: z.ZodString;
    relayGasFeeTotal: z.ZodString;
    relayFeePct: z.ZodString;
    relayFeeTotal: z.ZodString;
    lpFeePct: z.ZodString;
    timestamp: z.ZodString;
    isAmountTooLow: z.ZodBoolean;
    quoteBlock: z.ZodString;
    exclusiveRelayer: z.ZodString;
    exclusivityDeadline: z.ZodNumber;
    spokePoolAddress: z.ZodString;
    destinationSpokePoolAddress: z.ZodString;
    totalRelayFee: z.ZodObject<{
        pct: z.ZodString;
        total: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        pct: string;
        total: string;
    }, {
        pct: string;
        total: string;
    }>;
    relayerCapitalFee: z.ZodObject<{
        pct: z.ZodString;
        total: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        pct: string;
        total: string;
    }, {
        pct: string;
        total: string;
    }>;
    relayerGasFee: z.ZodObject<{
        pct: z.ZodString;
        total: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        pct: string;
        total: string;
    }, {
        pct: string;
        total: string;
    }>;
    lpFee: z.ZodObject<{
        pct: z.ZodString;
        total: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        pct: string;
        total: string;
    }, {
        pct: string;
        total: string;
    }>;
    limits: z.ZodObject<{
        minDeposit: z.ZodString;
        maxDeposit: z.ZodString;
        maxDepositInstant: z.ZodString;
        maxDepositShortDelay: z.ZodString;
        recommendedDepositInstant: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        minDeposit: string;
        maxDeposit: string;
        maxDepositInstant: string;
        maxDepositShortDelay: string;
        recommendedDepositInstant: string;
    }, {
        minDeposit: string;
        maxDeposit: string;
        maxDepositInstant: string;
        maxDepositShortDelay: string;
        recommendedDepositInstant: string;
    }>;
    fillDeadline: z.ZodString;
    outputAmount: z.ZodString;
    inputToken: z.ZodObject<{
        address: z.ZodString;
        symbol: z.ZodString;
        decimals: z.ZodNumber;
        chainId: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        symbol: string;
        chainId: number;
        address: string;
        decimals: number;
    }, {
        symbol: string;
        chainId: number;
        address: string;
        decimals: number;
    }>;
    outputToken: z.ZodObject<{
        address: z.ZodString;
        symbol: z.ZodString;
        decimals: z.ZodNumber;
        chainId: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        symbol: string;
        chainId: number;
        address: string;
        decimals: number;
    }, {
        symbol: string;
        chainId: number;
        address: string;
        decimals: number;
    }>;
}, "strip", z.ZodTypeAny, {
    inputToken: {
        symbol: string;
        chainId: number;
        address: string;
        decimals: number;
    };
    outputToken: {
        symbol: string;
        chainId: number;
        address: string;
        decimals: number;
    };
    outputAmount: string;
    fillDeadline: string;
    exclusivityDeadline: number;
    exclusiveRelayer: string;
    timestamp: string;
    estimatedFillTimeSec: number;
    capitalFeePct: string;
    capitalFeeTotal: string;
    relayGasFeePct: string;
    relayGasFeeTotal: string;
    relayFeePct: string;
    relayFeeTotal: string;
    lpFeePct: string;
    isAmountTooLow: boolean;
    quoteBlock: string;
    spokePoolAddress: string;
    destinationSpokePoolAddress: string;
    totalRelayFee: {
        pct: string;
        total: string;
    };
    relayerCapitalFee: {
        pct: string;
        total: string;
    };
    relayerGasFee: {
        pct: string;
        total: string;
    };
    lpFee: {
        pct: string;
        total: string;
    };
    limits: {
        minDeposit: string;
        maxDeposit: string;
        maxDepositInstant: string;
        maxDepositShortDelay: string;
        recommendedDepositInstant: string;
    };
}, {
    inputToken: {
        symbol: string;
        chainId: number;
        address: string;
        decimals: number;
    };
    outputToken: {
        symbol: string;
        chainId: number;
        address: string;
        decimals: number;
    };
    outputAmount: string;
    fillDeadline: string;
    exclusivityDeadline: number;
    exclusiveRelayer: string;
    timestamp: string;
    estimatedFillTimeSec: number;
    capitalFeePct: string;
    capitalFeeTotal: string;
    relayGasFeePct: string;
    relayGasFeeTotal: string;
    relayFeePct: string;
    relayFeeTotal: string;
    lpFeePct: string;
    isAmountTooLow: boolean;
    quoteBlock: string;
    spokePoolAddress: string;
    destinationSpokePoolAddress: string;
    totalRelayFee: {
        pct: string;
        total: string;
    };
    relayerCapitalFee: {
        pct: string;
        total: string;
    };
    relayerGasFee: {
        pct: string;
        total: string;
    };
    lpFee: {
        pct: string;
        total: string;
    };
    limits: {
        minDeposit: string;
        maxDeposit: string;
        maxDepositInstant: string;
        maxDepositShortDelay: string;
        recommendedDepositInstant: string;
    };
}>;
export type SuggestedFeesApiResponse = z.infer<typeof suggestedFeesResponseJsonSchema>;
//# sourceMappingURL=suggested-fees.d.ts.map