import r from"bs58";import{ethers as e}from"ethers";import{parsePhoneNumber as i}from"libphonenumber-js/max";import{z as t}from"zod";const d=t.string({required_error:"Privy DID must be included",invalid_type_error:"Privy DID is not a valid string"}).min(1).transform((r=>r.replace("did:privy:",""))),o=t.string({required_error:"Email address must be provided",invalid_type_error:"Email address must be a valid string"}).email("Invalid email address").transform((r=>r.toLowerCase())),s=t.string({required_error:"Verification code must be provided",invalid_type_error:"Invalid verification code"}).length(6,"Verification code must have 6 digits."),n=t.string({required_error:"Ethereum address must be provided",invalid_type_error:"Invalid Ethereum address"}).transform(((r,e)=>c(r)||(e.addIssue({code:t.ZodIssueCode.custom,message:"Invalid Ethereum address"}),t.NEVER))),a=t.string({required_error:"Solana address must be provided",invalid_type_error:"Invalid Solana address"}).trim().transform(((e,i)=>{try{r.decode(e)}catch(r){return i.addIssue({code:t.ZodIssueCode.custom,message:"Invalid Solana address"}),t.NEVER}return e})),m=t.string({required_error:"Phone number must be included",invalid_type_error:"Phone number is not a valid string"}).refine((r=>{try{return void 0!==u(r)}catch(r){return!1}}),{message:"Phone number is not valid"}).transform((r=>u(r)||""));function u(r){let e=i(r,"US");if(e?.isPossible())return e.formatInternational()}function l(r){return!!c(r)}function c(r){if("string"==typeof r)try{return e.utils.getAddress(r.trim())}catch(r){}}const v=t.object({mode:t.enum(["no-signup","login-or-sign-up"]).optional()});export{v as AuthenticateMode,o as Email,s as PasswordlessCode,m as PhoneNumber,a as SolanaWalletAddress,d as UserId,n as WalletAddress,l as isValidAddress,c as normalizeEthereumAddress,u as normalizePhoneNumber};
