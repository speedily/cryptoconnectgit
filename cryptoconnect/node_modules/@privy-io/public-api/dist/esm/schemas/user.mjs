import{z as e}from"zod";import{WalletAddress as t}from"./core.mjs";import{SmartWalletProvider as i}from"./smart-wallet-config.mjs";import"bs58";import"ethers";import"libphonenumber-js/max";import"../constants/smart-wallets.mjs";const r=e.object({type:e.literal("email"),address:e.string(),verified_at:e.number(),first_verified_at:e.number().nullable(),latest_verified_at:e.number().nullable()}),l=e.object({type:e.literal("phone"),phoneNumber:e.string(),verified_at:e.number(),first_verified_at:e.number().nullable(),latest_verified_at:e.number().nullable()}),n=e.object({type:e.enum(["wallet","smart_wallet"]),address:e.string(),chain_type:e.enum(["solana","ethereum"])}),a=e.object({type:e.literal("wallet"),address:e.string(),chain_id:e.string().optional(),chain_type:e.literal("ethereum"),wallet_client:e.literal("unknown"),wallet_client_type:e.string().optional(),connector_type:e.string().optional(),verified_at:e.number(),first_verified_at:e.number().nullable(),latest_verified_at:e.number().nullable()}),s=e.object({type:e.literal("smart_wallet"),address:e.string(),smart_wallet_type:i,verified_at:e.number(),first_verified_at:e.number().nullable(),latest_verified_at:e.number().nullable()}),o=e.object({type:e.literal("wallet"),address:e.string(),chain_type:e.literal("solana"),wallet_client:e.literal("unknown"),wallet_client_type:e.string().optional(),connector_type:e.string().optional(),verified_at:e.number(),first_verified_at:e.number().nullable(),latest_verified_at:e.number().nullable()}),_=e.object({type:e.literal("farcaster"),fid:e.number(),owner_address:t,username:e.string().optional(),display_name:e.string().optional(),bio:e.string().optional(),profile_picture:e.string().optional(),profile_picture_url:e.string().optional(),homepage_url:e.string().optional(),verified_at:e.number(),first_verified_at:e.number().nullable(),latest_verified_at:e.number().nullable(),signer_public_key:e.string().optional()}),u=e.object({type:e.literal("passkey"),created_with_browser:e.string().optional(),created_with_os:e.string().optional(),created_with_device:e.string().optional(),credential_id:e.string(),authenticator_name:e.string().optional(),enrolled_in_mfa:e.boolean(),verified_at:e.number(),first_verified_at:e.number().nullable(),latest_verified_at:e.number().nullable()}),b=e.object({type:e.literal("telegram"),telegram_user_id:e.string(),first_name:e.string().nullish(),last_name:e.string().nullish(),username:e.string().nullish(),photo_url:e.string().nullish(),verified_at:e.number(),first_verified_at:e.number().nullable(),latest_verified_at:e.number().nullable()}).transform((e=>({...e,telegramUserId:e.telegram_user_id,firstName:e.first_name})));let m=e.enum(["privy","user-passcode","google-drive","icloud","recovery-encryption-key"]),d=e.object({type:e.literal("wallet"),address:e.string(),imported:e.boolean().default(!1),delegated:e.boolean().default(!1),wallet_index:e.number(),chain_id:e.string(),chain_type:e.string(),wallet_client:e.literal("privy"),wallet_client_type:e.literal("privy"),connector_type:e.literal("embedded"),recovery_method:m,verified_at:e.number(),first_verified_at:e.number().nullable(),latest_verified_at:e.number().nullable()});const c=d.merge(e.object({chain_type:e.literal("ethereum")})),p=d.merge(e.object({chain_type:e.literal("solana"),public_key:e.string()})),f=d.merge(e.object({chain_type:e.literal("bitcoin-segwit"),public_key:e.string()})),g=d.merge(e.object({chain_type:e.literal("bitcoin-taproot"),public_key:e.string()})),v=e.object({type:e.literal("google_oauth"),subject:e.string(),email:e.string(),name:e.string().nullable(),verified_at:e.number(),first_verified_at:e.number().nullable(),latest_verified_at:e.number().nullable()}),y=e.object({type:e.literal("twitter_oauth"),subject:e.string(),username:e.string().nullable(),name:e.string().nullable(),profile_picture_url:e.string().nullable(),verified_at:e.number(),first_verified_at:e.number().nullable(),latest_verified_at:e.number().nullable()}),j=e.object({type:e.literal("discord_oauth"),subject:e.string(),username:e.string().nullable(),email:e.string().nullable(),verified_at:e.number(),first_verified_at:e.number().nullable(),latest_verified_at:e.number().nullable()}),h=e.object({type:e.literal("github_oauth"),subject:e.string(),username:e.string().nullable(),name:e.string().nullable(),email:e.string().nullable(),verified_at:e.number(),first_verified_at:e.number().nullable(),latest_verified_at:e.number().nullable()}),k=e.object({type:e.literal("linkedin_oauth"),subject:e.string(),name:e.string().optional(),email:e.string().nullable(),vanity_name:e.string().optional(),verified_at:e.number(),first_verified_at:e.number().nullable(),latest_verified_at:e.number().nullable()}),w=e.object({type:e.literal("spotify_oauth"),subject:e.string(),email:e.string().nullable(),name:e.string().nullable(),verified_at:e.number(),first_verified_at:e.number().nullable(),latest_verified_at:e.number().nullable()}),x=e.object({type:e.literal("instagram_oauth"),subject:e.string(),username:e.string().nullable(),verified_at:e.number(),first_verified_at:e.number().nullable(),latest_verified_at:e.number().nullable()}),N=e.object({type:e.literal("tiktok_oauth"),subject:e.string(),username:e.string().nullable(),name:e.string().nullable(),verified_at:e.number(),first_verified_at:e.number().nullable(),latest_verified_at:e.number().nullable()}),z=e.object({type:e.literal("apple_oauth"),subject:e.string(),email:e.string().nullable(),verified_at:e.number(),first_verified_at:e.number().nullable(),latest_verified_at:e.number().nullable()}),I=e.object({type:e.literal("custom_auth"),custom_user_id:e.string(),verified_at:e.number(),first_verified_at:e.number().nullable(),latest_verified_at:e.number().nullable()}),U=e.object({address:e.string()}),V=e.object({address:e.string()}),q=e.object({type:e.literal("cross_app"),subject:e.string(),provider_app_id:e.string(),embedded_wallets:e.array(U),smart_wallets:e.array(V),verified_at:e.number(),first_verified_at:e.number().nullable(),latest_verified_at:e.number().nullable()}),A=e.union([r,l,a,o,s,c,p,f,g,v,y,j,h,w,x,N,k,z,I,_,u,b,q]),B=e.object({type:e.literal("sms"),verified_at:e.number()}),C=e.object({type:e.literal("totp"),verified_at:e.number()}),D=e.object({type:e.literal("passkey"),verified_at:e.number()}),E=e.union([B,C,D]),F=e.record(e.string(),e.union([e.string(),e.number(),e.boolean()])),G=e.object({provider:e.string(),access_token:e.string(),access_token_expires_in_seconds:e.number().optional(),refresh_token:e.string().optional(),refresh_token_expires_in_seconds:e.number().optional(),scopes:e.array(e.string()).optional()}),H=e.object({id:e.string(),linked_accounts:e.array(A),mfa_methods:e.array(E),created_at:e.number(),has_accepted_terms:e.boolean(),is_guest:e.boolean(),custom_metadata:F.optional()}),J=e.enum(["set","ignore","clear"]),K=e.object({user:H,identity_token:e.string().min(1).nullable()}),L=e.object({user:H,token:e.string().min(1).nullable(),privy_access_token:e.string().min(1).nullable(),refresh_token:e.string().min(1).nullable(),identity_token:e.string().min(1).optional(),is_new_user:e.boolean().optional(),oauth_tokens:G.optional(),oauth_provider_tokens:e.object({provider:e.string(),access_token:e.string(),access_token_expires_in_seconds:e.number().optional(),refresh_token:e.string().optional(),scopes:e.array(e.string()).optional()}).optional(),session_update_action:J}),M=e.object({user:e.null(),token:e.null(),refresh_token:e.null(),session_update_action:e.literal(J.Values.clear)}),O=e.union([L,M]);export{z as AppleOauthAccount,L as AuthenticatedUser,n as BaseWalletAccount,f as BitcoinSegwitEmbeddedWalletAccount,g as BitcoinTaprootEmbeddedWalletAccount,q as CrossAppAccount,U as CrossAppEmbeddedWallet,V as CrossAppSmartWallet,I as CustomJwtAccount,F as CustomMetadata,j as DiscordOauthAccount,r as EmailAccount,a as EthereumAccount,c as EthereumEmbeddedWalletAccount,_ as FarcasterAccount,h as GithubOauthAccount,v as GoogleOauthAccount,x as InstagramOauthAccount,A as LinkedAccount,k as LinkedInOauthAccount,E as LinkedMfaMethod,M as LoggedOutUser,O as MaybeUser,G as OAuthTokens,u as PasskeyAccount,D as PasskeyMfaMethod,l as PhoneAccount,J as SessionUpdateActionEnum,s as SmartWalletAccount,B as SmsMfaMethod,o as SolanaAccount,p as SolanaEmbeddedWalletAccount,w as SpotifyOauthAccount,b as TelegramAccount,N as TiktokOauthAccount,C as TotpMfaMethod,y as TwitterOauthAccount,H as User,K as UserWithIdentityToken};
