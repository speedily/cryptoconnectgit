import{f as a}from"./chunk-7TGA7V4A.mjs";import{toAccount as y}from"viem/accounts";var A=async e=>{let{walletId:s,address:m,privy:o}=e;return y({address:m,signMessage:async({message:r})=>{let t=g(r),{signature:n}=await o.walletApi.ethereum.signMessage({walletId:s,message:t});return n},signTypedData:async r=>{let{message:t,domain:n,types:c,primaryType:u}=r;if(!n)throw new a("typedData.domain must be defined");if(!t)throw new a("typedData.message must be defined");if(!c)throw new a("typedData.message must be defined");let{signature:p}=await o.walletApi.ethereum.signTypedData({walletId:s,typedData:{domain:n,message:t,primaryType:u,types:c}});return p},signTransaction:async r=>{let t=f(r),{signedTransaction:n}=await o.walletApi.ethereum.signTransaction({walletId:s,transaction:t});return n}})},d=e=>{if(e==="legacy")return 0;if(e==="eip2930")return 1;if(e=="eip1559"||typeof e>"u")return 2;throw new a("EIP4844 and EIP7702 transaction types are not yet supported.")},i=e=>{if(e)return`0x${e.toString(16)}`},g=e=>typeof e=="string"?e:typeof e.raw=="string"?Uint8Array.from(Buffer.from(e.raw.slice(2),"hex")):e.raw,f=e=>({to:e.to??void 0,nonce:e.nonce,chainId:e.chainId,data:e.data,value:i(e.value),type:d(e.type),gasLimit:i(e.gas),gasPrice:i(e.gasPrice),maxFeePerGas:i(e.maxFeePerGas),maxPriorityFeePerGas:i(e.maxPriorityFeePerGas)});export{A as createViemAccount};
