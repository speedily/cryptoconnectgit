"use strict";var e=require("viem"),a=require("viem/accounts"),t=require("viem/utils"),r=require("./errors.js"),i=require("./utils-2_PewCqC.js");require("node-fetch-native"),require("ts-case-convert");let s=e=>{if("legacy"===e)return 0;if("eip2930"===e)return 1;if("eip1559"==e||void 0===e)return 2;throw new r.PrivyClientError("EIP4844 and EIP7702 transaction types are not yet supported.")},n=e=>{if(e)return`0x${e.toString(16)}`},o=e=>"string"==typeof e?e:"string"==typeof e.raw?Uint8Array.from(Buffer.from(e.raw.slice(2),"hex")):e.raw,u=e=>({to:e.to??void 0,nonce:e.nonce,chainId:e.chainId,data:e.data,value:n(e.value),type:s(e.type),gasLimit:n(e.gas),gasPrice:n(e.gasPrice),maxFeePerGas:n(e.maxFeePerGas),maxPriorityFeePerGas:n(e.maxPriorityFeePerGas)});exports.createViemAccount=async s=>{let{walletId:n,address:d,privy:l}=s;return a.toAccount({address:d,sign:async({hash:e})=>{let{signature:a}=await l.walletApi.ethereum.secp256k1Sign({walletId:n,hash:e});return a},signMessage:async({message:e})=>{let a=o(e),{signature:t}=await l.walletApi.ethereum.signMessage({walletId:n,message:a});return t},signTypedData:async a=>{let{message:t,domain:s,types:o,primaryType:u}=i.replaceBigInts(a,e.toHex);if(!s)throw new r.PrivyClientError("typedData.domain must be defined");if(!t||!o)throw new r.PrivyClientError("typedData.message must be defined");let{signature:d}=await l.walletApi.ethereum.signTypedData({walletId:n,typedData:{domain:s,message:t,primaryType:u,types:o}});return d},signTransaction:async e=>{let a=u(e),{signedTransaction:t}=await l.walletApi.ethereum.signTransaction({walletId:n,transaction:a});return t},signAuthorization:async a=>{let r=t.hashAuthorization(a),{signature:i}=await l.walletApi.ethereum.secp256k1Sign({walletId:n,hash:r});return{address:a.contractAddress??a.address,nonce:a.nonce,chainId:a.chainId,...e.parseSignature(i)}}})};
