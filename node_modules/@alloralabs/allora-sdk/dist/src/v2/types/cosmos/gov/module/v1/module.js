"use strict";
// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.3.0
//   protoc               unknown
// source: cosmos/gov/module/v1/module.proto
Object.defineProperty(exports, "__esModule", { value: true });
exports.Module = exports.protobufPackage = void 0;
/* eslint-disable */
const wire_1 = require("@bufbuild/protobuf/wire");
exports.protobufPackage = "cosmos.gov.module.v1";
function createBaseModule() {
    return { maxMetadataLen: "0", authority: "", maxTitleLen: "0", maxSummaryLen: "0" };
}
exports.Module = {
    encode(message, writer = new wire_1.BinaryWriter()) {
        if (message.maxMetadataLen !== "0") {
            writer.uint32(8).uint64(message.maxMetadataLen);
        }
        if (message.authority !== "") {
            writer.uint32(18).string(message.authority);
        }
        if (message.maxTitleLen !== "0") {
            writer.uint32(24).uint64(message.maxTitleLen);
        }
        if (message.maxSummaryLen !== "0") {
            writer.uint32(32).uint64(message.maxSummaryLen);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof wire_1.BinaryReader ? input : new wire_1.BinaryReader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseModule();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1: {
                    if (tag !== 8) {
                        break;
                    }
                    message.maxMetadataLen = reader.uint64().toString();
                    continue;
                }
                case 2: {
                    if (tag !== 18) {
                        break;
                    }
                    message.authority = reader.string();
                    continue;
                }
                case 3: {
                    if (tag !== 24) {
                        break;
                    }
                    message.maxTitleLen = reader.uint64().toString();
                    continue;
                }
                case 4: {
                    if (tag !== 32) {
                        break;
                    }
                    message.maxSummaryLen = reader.uint64().toString();
                    continue;
                }
            }
            if ((tag & 7) === 4 || tag === 0) {
                break;
            }
            reader.skip(tag & 7);
        }
        return message;
    },
    fromJSON(object) {
        return {
            maxMetadataLen: isSet(object.maxMetadataLen) ? globalThis.String(object.maxMetadataLen) : "0",
            authority: isSet(object.authority) ? globalThis.String(object.authority) : "",
            maxTitleLen: isSet(object.maxTitleLen) ? globalThis.String(object.maxTitleLen) : "0",
            maxSummaryLen: isSet(object.maxSummaryLen) ? globalThis.String(object.maxSummaryLen) : "0",
        };
    },
    toJSON(message) {
        const obj = {};
        if (message.maxMetadataLen !== "0") {
            obj.maxMetadataLen = message.maxMetadataLen;
        }
        if (message.authority !== "") {
            obj.authority = message.authority;
        }
        if (message.maxTitleLen !== "0") {
            obj.maxTitleLen = message.maxTitleLen;
        }
        if (message.maxSummaryLen !== "0") {
            obj.maxSummaryLen = message.maxSummaryLen;
        }
        return obj;
    },
    create(base) {
        return exports.Module.fromPartial(base !== null && base !== void 0 ? base : {});
    },
    fromPartial(object) {
        var _a, _b, _c, _d;
        const message = createBaseModule();
        message.maxMetadataLen = (_a = object.maxMetadataLen) !== null && _a !== void 0 ? _a : "0";
        message.authority = (_b = object.authority) !== null && _b !== void 0 ? _b : "";
        message.maxTitleLen = (_c = object.maxTitleLen) !== null && _c !== void 0 ? _c : "0";
        message.maxSummaryLen = (_d = object.maxSummaryLen) !== null && _d !== void 0 ? _d : "0";
        return message;
    },
};
function isSet(value) {
    return value !== null && value !== undefined;
}
