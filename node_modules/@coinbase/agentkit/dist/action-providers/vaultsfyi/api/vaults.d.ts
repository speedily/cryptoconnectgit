import z from "zod";
import { VaultsActionSchema } from "../schemas";
import { ApiError } from "./types";
export type ApiVault = {
    name: string;
    address: string;
    network: string;
    protocol: string;
    tvlDetails: {
        tvlUsd: string;
    };
    token: {
        name: string;
        assetAddress: string;
        symbol: string;
        decimals: number;
    };
    apy: {
        base: {
            "7day": number;
        };
        rewards: {
            "7day": number;
        };
        total: {
            "7day": number;
        };
    };
    isTransactional: boolean;
};
/**
 * Fetches a list of vaults from the vaultsfyi API.
 *
 * @param args - The action parameters
 * @param apiKey - The vaultsfyi API key
 * @returns The list of vaults
 */
export declare function fetchVaults(args: z.infer<typeof VaultsActionSchema>, apiKey: string): Promise<ApiVault[] | ApiError>;
