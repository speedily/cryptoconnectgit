import { ContentTypeId } from '@xmtp/content-type-primitives';

const ContentTypeTransactionReference = new ContentTypeId({
    authorityId: "xmtp.org",
    typeId: "transactionReference",
    versionMajor: 1,
    versionMinor: 0,
});
class TransactionReferenceCodec {
    get contentType() {
        return ContentTypeTransactionReference;
    }
    encode(content) {
        const encoded = {
            type: ContentTypeTransactionReference,
            parameters: {},
            content: new TextEncoder().encode(JSON.stringify(content)),
        };
        return encoded;
    }
    decode(encodedContent) {
        const uint8Array = encodedContent.content;
        const contentReceived = JSON.parse(new TextDecoder().decode(uint8Array));
        return contentReceived;
    }
    fallback(content) {
        if (content.reference) {
            return `[Crypto transaction] Use a blockchain explorer to learn more using the transaction hash: ${content.reference}`;
        }
        return `Crypto transaction`;
    }
    shouldPush() {
        return true;
    }
}

export { ContentTypeTransactionReference, TransactionReferenceCodec };
//# sourceMappingURL=index.js.map
