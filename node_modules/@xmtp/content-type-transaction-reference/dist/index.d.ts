import { ContentCodec, ContentTypeId, EncodedContent } from '@xmtp/content-type-primitives';

declare const ContentTypeTransactionReference: ContentTypeId;
type TransactionReference = {
    /**
     * The namespace for the networkId
     */
    namespace?: string;
    /**
     * The networkId for the transaction, in decimal or hexidecimal format
     */
    networkId: number | string;
    /**
     * The transaction hash
     */
    reference: string;
    /**
     * Optional metadata object
     */
    metadata?: {
        transactionType: string;
        currency: string;
        amount: number;
        decimals: number;
        fromAddress: string;
        toAddress: string;
    };
};
declare class TransactionReferenceCodec implements ContentCodec<TransactionReference> {
    get contentType(): ContentTypeId;
    encode(content: TransactionReference): EncodedContent;
    decode(encodedContent: EncodedContent): TransactionReference;
    fallback(content: TransactionReference): string | undefined;
    shouldPush(): boolean;
}

export { ContentTypeTransactionReference, type TransactionReference, TransactionReferenceCodec };
