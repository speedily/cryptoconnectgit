import { TokenInfo } from "../types/index.js";
import { LoggerT } from "./index.js";
import { Address } from "viem";
export type ChainsQueryParams = Partial<{
    inputTokenSymbol: string;
    outputTokenSymbol: string;
    chainId: number | number[];
    omitTokens: boolean;
}>;
export type GetSupportedChainsParams = ChainsQueryParams & {
    logger?: LoggerT;
    apiUrl?: string;
};
export declare function getSupportedChains({ logger, apiUrl, ...params }: GetSupportedChainsParams): Promise<ChainsQueryResponse>;
export type AcrossChain = {
    chainId: number;
    name: string;
    publicRpcUrl: string;
    explorerUrl: string;
    logoUrl: string;
    spokePool: Address;
    inputTokens: TokenInfo[];
    outputTokens: TokenInfo[];
};
export type ChainsQueryResponse = AcrossChain[];
//# sourceMappingURL=getSupportedChains.d.ts.map