import { Address } from "viem";
import { LoggerT } from "../utils/index.js";
import { Route } from "../types/index.js";
export type RoutesQueryParams = Partial<{
    /**
     * The origin token address. If set only routes with this token as origin are returned.
     */
    originToken: Address;
    /**
     * The destination token address. If set only routes with this token as destination
     * are returned.
     */
    destinationToken: Address;
    /**
     * The destination chain id. If set only routes with this chain id as destination
     * are returned.
     */
    destinationChainId: number;
    /**
     * The origin chain id. If set only routes with this chain id as origin are returned.
     */
    originChainId: number;
    originTokenSymbol: string;
    destinationTokenSymbol: string;
}>;
/**
 * Params for {@link getAvailableRoutes}.
 */
export type GetAvailableRoutesParams = RoutesQueryParams & Partial<{
    apiUrl: string;
    logger: LoggerT;
}>;
export type GetAvailableRoutesReturnType = Route[];
/**
 * Get the available routes for a given set of parameters.
 * @param params - See {@link GetAvailableRoutesParams}.
 * @returns See {@link GetAvailableRoutesReturnType}.
 * @public
 */
export declare function getAvailableRoutes({ apiUrl, logger, ...params }: GetAvailableRoutesParams): Promise<GetAvailableRoutesReturnType>;
//# sourceMappingURL=getAvailableRoutes.d.ts.map