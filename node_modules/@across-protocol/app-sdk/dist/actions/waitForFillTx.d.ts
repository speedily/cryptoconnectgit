import { Address, Hash, Hex, Log } from "viem";
import { ConfiguredPublicClient } from "../types/index.js";
import { FillStatus } from "./getFillByDepositTx.js";
import { LoggerT } from "../utils/index.js";
export type WaitForFillTxParams = {
    depositId: bigint | number;
    deposit: {
        originChainId: number;
        destinationChainId: number;
        destinationSpokePoolAddress: Address;
        message: Hex;
    };
    destinationChainClient: ConfiguredPublicClient;
    fromBlock: bigint;
    depositTxHash?: Hash;
    logger?: LoggerT;
};
export declare function waitForFillTx(params: WaitForFillTxParams): Promise<FillStatus>;
export declare function waitForFillTxEvent(params: WaitForFillTxParams): Promise<FillStatus>;
export declare function waitForFillEvent(params: WaitForFillTxParams): Promise<FillStatus>;
export declare function parseFillLogs(logs: Log[], filter?: Partial<{
    inputToken: Address;
    outputToken: Address;
    originChainId: bigint;
    inputAmount: bigint;
    outputAmount: bigint;
    depositor: Address;
    depositId: bigint | number;
}>): {
    inputToken: `0x${string}`;
    outputToken: `0x${string}`;
    inputAmount: bigint;
    outputAmount: bigint;
    repaymentChainId: bigint;
    originChainId: bigint;
    depositId: bigint;
    fillDeadline: number;
    exclusivityDeadline: number;
    exclusiveRelayer: `0x${string}`;
    relayer: `0x${string}`;
    depositor: `0x${string}`;
    recipient: `0x${string}`;
    messageHash: `0x${string}`;
    relayExecutionInfo: {
        updatedRecipient: `0x${string}`;
        fillType: string | undefined;
        updatedMessageHash: `0x${string}`;
        updatedOutputAmount: bigint;
    };
    depositTxHash: `0x${string}`;
    depositTxBlock: bigint;
} | {
    inputToken: `0x${string}`;
    outputToken: `0x${string}`;
    inputAmount: bigint;
    outputAmount: bigint;
    repaymentChainId: bigint;
    originChainId: bigint;
    depositId: number;
    fillDeadline: number;
    exclusivityDeadline: number;
    exclusiveRelayer: `0x${string}`;
    relayer: `0x${string}`;
    depositor: `0x${string}`;
    recipient: `0x${string}`;
    message: `0x${string}`;
    relayExecutionInfo: {
        fillType: string | undefined;
        updatedRecipient: `0x${string}`;
        updatedMessage: `0x${string}`;
        updatedOutputAmount: bigint;
    };
    depositTxHash: `0x${string}`;
    depositTxBlock: bigint;
} | undefined;
export declare const FillType: {
    [key: number]: string;
};
//# sourceMappingURL=waitForFillTx.d.ts.map