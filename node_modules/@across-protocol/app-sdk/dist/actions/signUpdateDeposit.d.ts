import { Address, Hex, WalletClient } from "viem";
export type SignUpdateDepositTypedDataParams = {
    walletClient: WalletClient;
    depositId: bigint | number;
    originChainId: bigint | number;
    updatedMessage: Hex;
    updatedOutputAmount: bigint;
    updatedRecipient: Address;
};
/**
 * Creates a signature that allows signer to update a deposit. Can be used with
 * `SpokePool` contract's `speedUpV3Deposit` method. Is used internally by
 * {@link simulateUpdateDepositTx}
 * @param params See {@link SignUpdateDepositTypedDataParams}
 * @returns Hex-encoded signature
 */
export declare function signUpdateDepositTypedData(params: SignUpdateDepositTypedDataParams): Promise<`0x${string}`>;
/**
 * Creates a signature that allows signer to update a deposit. Can be used with
 * `SpokePool` contract's `speedUpDeposit` method. Is used internally by
 * {@link simulateUpdateDepositTx}
 * @param params See {@link SignUpdateDepositTypedDataParams}
 * @returns Hex-encoded signature
 */
export declare function signUpdateDepositTypedDataV3_5(params: SignUpdateDepositTypedDataParams): Promise<`0x${string}`>;
//# sourceMappingURL=signUpdateDeposit.d.ts.map